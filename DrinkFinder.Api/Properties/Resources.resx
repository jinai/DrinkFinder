<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LoremIpsum" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non nibh sed odio porta vulputate. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris nec metus nibh. Maecenas ultricies sit amet metus sit amet hendrerit. Duis consectetur leo suscipit augue congue suscipit. Phasellus molestie orci ac risus porta ultrices. Mauris turpis risus, viverra nec libero ac, pharetra tincidunt massa. Curabitur nec turpis vitae felis dictum cursus sit amet ut enim. Nulla nunc ipsum, semper dapibus leo vitae, interdum condimentum nibh. Donec luctus efficitur dolor, hendrerit vestibulum ipsum semper ut.

Sed euismod sagittis nisi, sit amet sagittis quam iaculis ac. Nulla vestibulum ex ut augue pharetra pulvinar. Nam pretium mollis ligula. Mauris malesuada et magna id vestibulum. Maecenas in euismod orci, vel elementum elit. Nam placerat rhoncus posuere. Curabitur risus metus, elementum eget varius eget, viverra nec sapien. Duis at nulla ut tortor aliquam eleifend. Morbi ultricies tempor mi, quis consectetur felis porta ut. Integer eget tortor id sem vehicula rutrum in vulputate lectus. Fusce in turpis scelerisque, consequat justo commodo, sodales nulla. Nam sed lorem eu libero lacinia eleifend. Mauris luctus elit sem, non vestibulum massa tempus eu.

Phasellus augue odio, scelerisque quis ex dignissim, fringilla aliquet lorem. Nulla vel rhoncus risus. Vivamus molestie, leo at ullamcorper gravida, mauris sapien suscipit erat, non semper tellus justo at felis. Vestibulum sed accumsan neque. Duis quis aliquam ligula. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Fusce odio mi, elementum et urna sed, laoreet imperdiet nulla. Nulla facilisi. Mauris dictum urna augue, ac ullamcorper neque eleifend at.

Donec urna lorem, facilisis et commodo at, vestibulum non turpis. Fusce vel odio dignissim, placerat tortor id, congue justo. Aliquam aliquam ornare sapien at semper. Phasellus sit amet nisi in erat tincidunt tincidunt. Nullam vel ipsum feugiat nisl egestas tincidunt in in massa. Donec volutpat fringilla mi eu auctor. Etiam semper hendrerit gravida. Sed vel dignissim arcu.

Pellentesque sit amet porta lectus, quis porta tortor. Donec rutrum elit arcu, ac porttitor dolor rutrum vel. Praesent viverra urna et iaculis fringilla. Fusce cursus libero convallis cursus placerat. Nullam convallis porta tellus et laoreet. Vestibulum dictum, turpis in imperdiet egestas, massa libero rutrum nibh, nec semper felis lacus in dolor. Fusce mauris nulla, dignissim eu sem vitae, gravida imperdiet elit. Suspendisse faucibus turpis erat, at condimentum diam luctus vel. Maecenas sed est ac quam scelerisque auctor ac nec sapien. Nam ullamcorper et risus consequat venenatis. Fusce malesuada eros ut lacinia sollicitudin. Mauris non nulla consectetur, dignissim mi a, pretium purus.</value>
  </data>
</root>